# =============================================================================
# RebelDev Enhanced Auto Scanner - GitHub Actions Workflow
# Description: Automated VPN configuration validation with performance testing
# Schedule: Hourly execution for fresh configuration updates
# Version: 3.0.0
# =============================================================================

name: "🚀 RebelDev - Improved Auto Config Scanner"

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh all configurations'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.9'
  SCANNER_VERSION: '4.1.0'

jobs:
  improved-scan-and-deploy:
    name: "🔍 Improved Scan & Deploy"
    runs-on: ubuntu-latest
    
    # Add timeout to prevent hanging
    timeout-minutes: 30
    
    steps:
      - name: "🔄 Checkout Repository"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: "🐍 Setup Python Environment"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          
      - name: "📦 Install Dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install requests
          echo "✅ Dependencies installed"
          
      - name: "🔧 Setup System Permissions"
        run: |
          # Enable ping without root (if possible)
          sudo sysctl -w net.ipv4.ping_group_range="0 2147483647" || true
          echo "✅ System permissions configured"
          
      - name: "🚀 Execute Improved Scanner"
        run: |
          echo "Starting improved VPN configuration scan..."
          echo "This may take several minutes..."
          timeout 25m python auto_scanner.py
          echo "✅ Scanner execution completed"
          
      - name: "✅ Validate Output"
        run: |
          echo "Validating generated configurations..."
          if [ -d "RebelLink" ]; then
            echo "📁 RebelLink directory found"
            config_count=$(find RebelLink -name "*.txt" -type f | wc -l)
            echo "📊 Found $config_count configuration files"
            
            if [ -f "RebelLink/performance_report.json" ]; then
              echo "📈 Performance report generated"
              python -c "
              import json
              try:
                  with open('RebelLink/performance_report.json', 'r') as f:
                      report = json.load(f)
                  print(f'✅ Scan completed: {report[\"scan_timestamp\"]}')
                  print(f'📋 Processed: {report[\"performance_metrics\"][\"total_configurations_processed\"]}')
                  print(f'✅ Valid: {report[\"performance_metrics\"][\"valid_configurations_found\']}')
                  print(f'📊 Success: {report[\"performance_metrics\"][\"success_rate\"]}%')
                  print(f'⚡ Avg Latency: {report[\"performance_metrics\"][\"average_latency_ms\"]}ms')
              except Exception as e:
                  print(f'⚠️ Report read error: {e}')
              "
            else
              echo "⚠️ Performance report not found"
            fi
          else
            echo "❌ RebelLink directory not found"
            exit 1
          fi
          
      - name: "🔄 Deploy Configurations"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "RebelDev Improved Scanner"
          
          if git diff --quiet HEAD -- RebelLink/; then
            echo "🟡 No configuration changes detected"
          else
            git add RebelLink/
            timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            git commit -m "🤖 Improved Auto-Update: VPN Configurations ${timestamp}" \
                      -m "Enhanced scanner with better ping handling" \
                      -m "Scanner Version: ${{ env.SCANNER_VERSION }}" \
                      -m "Features: TCP fallback, Improved timeout handling"
            git push
            echo "✅ Configuration updates deployed"
          fi
