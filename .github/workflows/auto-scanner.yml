# =============================================================================
# RebelDev Enhanced Auto Scanner - GitHub Actions Workflow
# =============================================================================

name: "üöÄ RebelDev - Improved Auto Config Scanner"

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh all configurations'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.12'
  SCANNER_VERSION: '4.7.0'

jobs:
  improved-scan-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: "üîÑ Checkout Repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "üêç Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: "üì¶ Install Dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp requests

      - name: "üîß Setup System Permissions"
        run: |
          sudo sysctl -w net.ipv4.ping_group_range="0 2147483647" || true
          sudo apt-get update && sudo apt-get install -y curl || true

      - name: "üßπ Clean Cache"
        run: |
          rm -rf RebelLink || true

      - name: "üöÄ Run Scanner"
        run: |
          echo "Starting scan v${{ env.SCANNER_VERSION }}..."
          timeout 40m python auto_scanner.py

      - name: "‚úÖ Validate Output"
        run: |
          echo "Validating generated configurations..."
          if [ -d "RebelLink" ]; then
            sub_count=$(find RebelLink -name "*_subscriptions.txt" -type f | wc -l)
            echo "Found $sub_count subscription files"
            if [ -f "RebelLink/performance_report.json" ]; then
              echo "import json" > validate_report.py
              echo "try:" >> validate_report.py
              echo "    with open('RebelLink/performance_report.json') as f:" >> validate_report.py
              echo "        r=json.load(f)" >> validate_report.py
              echo "    print(f'‚úÖ Scan completed: {r[\"scan_timestamp\"]}')" >> validate_report.py
              echo "    print(f'üìã Processed: {r[\"performance_metrics\"][\"total_processed\"]}')" >> validate_report.py
              echo "    print(f'‚úÖ Valid: {r[\"performance_metrics\"][\"valid_configs\"]}')" >> validate_report.py
              echo "    print(f'üìä Success rate: {r[\"performance_metrics\"][\"success_rate\"]}%')" >> validate_report.py
              echo "    print(f'‚ö° Avg Latency: {r[\"performance_metrics\"][\"avg_latency_ms\"]}ms')" >> validate_report.py
              echo "    print(f'‚≠ê Avg Score: {r[\"performance_metrics\"][\"avg_score\"]}')" >> validate_report.py
              echo "except Exception as e:" >> validate_report.py
              echo "    print(f'‚ö†Ô∏è Report read error: {e}')" >> validate_report.py
              python validate_report.py
              rm validate_report.py
            else
              echo "‚ö†Ô∏è performance_report.json not found"
              exit 1
            fi
          else
            echo "‚ùå RebelLink folder missing"
            exit 1
          fi
          echo "‚úÖ Validation passed"

      - name: "üîÑ Deploy Configurations"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "RebelDev Improved Scanner"

          if git diff --quiet HEAD -- RebelLink/; then
            echo "üü° No configuration changes detected"
          else
            git add RebelLink/
            valid_count=$(python -c "import json; d=json.load(open('RebelLink/performance_report.json')); print(d['performance_metrics']['valid_configs'])")
            timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            git commit -m "ü§ñ Auto-Update: ${timestamp}" \
                        -m "v${{ env.SCANNER_VERSION }} - ${valid_count} valid configs"
            git push
          fi

      - name: "üì§ Upload Artifacts"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rebeldev-scan-results
          path: |
            RebelLink/
            scanner.log
          retention-days: 7
          if-no-files-found: ignore
